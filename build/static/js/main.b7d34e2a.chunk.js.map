{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","yearListFiltered","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b7d34e2a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = props => {\n\tconst dropdownChangeHandler = event => {\n\t\tprops.onChangeFilter(event.target.value); // From Expenses.js\n\t};\n\n\treturn (\n\t\t<div className='expenses-filter'>\n\t\t\t<div className='expenses-filter__control'>\n\t\t\t\t<label>Filter by year</label>\n\t\t\t\t<select\n\t\t\t\t\tvalue={props.selected}\n\t\t\t\t\tonChange={dropdownChangeHandler}\n\t\t\t\t>\n\t\t\t\t\t<option value='2022'>2022</option>\n\t\t\t\t\t<option value='2021'>2021</option>\n\t\t\t\t\t<option value='2020'>2020</option>\n\t\t\t\t\t<option value='2019'>2019</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = props => {\n\treturn (\n\t\t<li>\n\t\t\t<Card className='expense-item'>\n\t\t\t\t<ExpenseDate date={props.date} />\n\t\t\t\t<div className='expense-item__description'>\n\t\t\t\t\t<h2>{props.title}</h2>\n\t\t\t\t\t<div className='expense-item__price'>${props.amount}</div>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</li>\n\t);\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n\t// Showing Data according to years\r\n\t// Improved Readability\r\n\tif (props.yearListFiltered.length === 0) {\r\n\t\treturn <h2 className='expenses-list__fallback'>No Expenses Found!</h2>;\r\n\t}\r\n\treturn (\r\n\t\t<ul className='expenses-list'>\r\n\t\t\t{props.yearListFiltered.map(expense => (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\tkey={expense.id}\r\n\t\t\t\t\ttitle={expense.title}\r\n\t\t\t\t\tamount={expense.amount}\r\n\t\t\t\t\tdate={expense.date}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n\tlet barFillHeight = '0%';\r\n\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n\t}\r\n\treturn (\r\n\t\t<div className='chart-bar'>\r\n\t\t\t<div className='chart-bar__inner'>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='chart-bar__fill'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: barFillHeight,\r\n\t\t\t\t\t}}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<div className='chart-bar__label'>{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\nimport './ChartBar.css';\r\n\r\nconst Chart = props => {\r\n\tconst dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n\r\n\tconst totalMaximum = Math.max(...dataPointValues);\r\n\treturn (\r\n\t\t<div className='chart'>\r\n\t\t\t{props.dataPoints.map(dataPoint => (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n\t\t\t\t\tmaxValue={totalMaximum}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: 'Jan', value: 0 },\r\n\t\t{ label: 'Feb', value: 0 },\r\n\t\t{ label: 'Mar', value: 0 },\r\n\t\t{ label: 'Apr', value: 0 },\r\n\t\t{ label: 'May', value: 0 },\r\n\t\t{ label: 'Jun', value: 0 },\r\n\t\t{ label: 'Jul', value: 0 },\r\n\t\t{ label: 'Aug', value: 0 },\r\n\t\t{ label: 'Sep', value: 0 },\r\n\t\t{ label: 'Oct', value: 0 },\r\n\t\t{ label: 'Nov', value: 0 },\r\n\t\t{ label: 'Dec', value: 0 },\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth();\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\n\n//import ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport './Expenses.css';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = props => {\n\tconst [filteredYear, setFilteredYear] = useState('2020');\n\n\tconst filterChangeHandler = selectedYear => {\n\t\tsetFilteredYear(selectedYear);\n\t};\n\tconst filteredExpenses = props.items.filter(expense => {\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\n\t});\n\n\t// Showing Data according to years\n\t// Improved Readability\n\t/*\n\tlet expensesContent = <p>No expenses found!</p>;\n\n\tif (filteredExpenses.length > 0) {\n\t\texpensesContent = filteredExpenses.map(expense => (\n\t\t\t<ExpenseItem\n\t\t\t\tkey={expense.id}\n\t\t\t\ttitle={expense.title}\n\t\t\t\tamount={expense.amount}\n\t\t\t\tdate={expense.date}\n\t\t\t/>\n\t\t));\n\t}\n\t*/\n\n\treturn (\n\t\t<div>\n\t\t\t<Card className='expenses'>\n\t\t\t\t<ExpensesFilter\n\t\t\t\t\tselected={filteredYear}\n\t\t\t\t\tonChangeFilter={filterChangeHandler}\n\t\t\t\t/>\n\n\t\t\t\t<ExpensesChart expenses={filteredExpenses} />\n\n\t\t\t\t{\n\t\t\t\t\t// Showing Data according to years\n\t\t\t\t\t// Improved Readability\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t//{expensesContent}\n\t\t\t\t}\n\n\t\t\t\t{<ExpensesList yearListFiltered={filteredExpenses} />}\n\n\t\t\t\t{\n\t\t\t\t\t// Showing Data according to years\n\t\t\t\t}\n\n\t\t\t\t{/*\n\t\t\t\t{filteredExpenses.length === 0 && <p>No expenses found!</p>}\n\n\t\t\t\t{// if the first statement is true then the second statement will be returned }\n\n\t\t\t\t{filteredExpenses.length > 0 &&\n\t\t\t\t\tfilteredExpenses.map(expense => (\n\t\t\t\t\t\t<ExpenseItem\n\t\t\t\t\t\t\tkey={expense.id}\n\t\t\t\t\t\t\ttitle={expense.title}\n\t\t\t\t\t\t\tamount={expense.amount}\n\t\t\t\t\t\t\tdate={expense.date}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n                */}\n\n\t\t\t\t{\n\t\t\t\t\t/////////////////////////////////////////////////////////////////////\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\t// Showing Data according to years\n\t\t\t\t\t// Alternative Way\n\t\t\t\t}\n\t\t\t\t{/*\n\t\t\t\t{filteredExpenses.length === 0 ? (\n\t\t\t\t\t<p>No expenses found!</p>\n\t\t\t\t) : (\n\t\t\t\t\tfilteredExpenses.map(expense => (\n\t\t\t\t\t\t<ExpenseItem\n\t\t\t\t\t\t\tkey={expense.id}\n\t\t\t\t\t\t\ttitle={expense.title}\n\t\t\t\t\t\t\tamount={expense.amount}\n\t\t\t\t\t\t\tdate={expense.date}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t\t*/}\n\n\t\t\t\t{\n\t\t\t\t\t/////////////////////////////////////////////////////////////////////\n\t\t\t\t}\n\n\t\t\t\t{/*\n\t\t\t\t{props.items.map(expense => (\n\t\t\t\t\t<ExpenseItem\n\t\t\t\t\t\tkey={expense.id}\n\t\t\t\t\t\ttitle={expense.title}\n\t\t\t\t\t\tamount={expense.amount}\n\t\t\t\t\t\tdate={expense.date}\n\t\t\t\t\t/>\n\t\t\t\t))} */}\n\n\t\t\t\t{\n\t\t\t\t\t/////////////////////////////////////////////////////////////////////\n\t\t\t\t}\n\n\t\t\t\t{/*\n\t\t\t\t<ExpenseItem\n\t\t\t\t\ttitle={props.items[0].title}\n\t\t\t\t\tamount={props.items[0].amount}\n\t\t\t\t\tdate={props.items[0].date}\n\t\t\t\t/>\n\t\t\t\t<ExpenseItem\n\t\t\t\t\ttitle={props.items[1].title}\n\t\t\t\t\tamount={props.items[1].amount}\n\t\t\t\t\tdate={props.items[1].date}\n\t\t\t\t/>\n\t\t\t\t<ExpenseItem\n\t\t\t\t\ttitle={props.items[2].title}\n\t\t\t\t\tamount={props.items[2].amount}\n\t\t\t\t\tdate={props.items[2].date}\n\t\t\t\t/>\n\t\t\t\t<ExpenseItem\n\t\t\t\t\ttitle={props.items[3].title}\n\t\t\t\t\tamount={props.items[3].amount}\n\t\t\t\t\tdate={props.items[3].date}\n\t\t\t\t/> */}\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = props => {\n\tconst [enteredTitle, setEnteredTitle] = useState('');\n\tconst [enteredAmount, setEnteredAmount] = useState('');\n\tconst [enteredDate, setEnteredDate] = useState('');\n\n\t//////////////////////////////////////////////////////////////////////////////////////////////\n\t// Using single state instead of multiple states\n\t// const [userInput, setUserInput] = useState({\n\t//   enteredTitle: '',\n\t//   enteredAmount: '',\n\t//   enteredDate: '',\n\t// });\n\n\tconst titleChangeHandler = event => {\n\t\tsetEnteredTitle(event.target.value);\n\n\t\t//////////////////////////////////////////////////////////////////////////////////////////////\n\t\t// setUserInput({\n\t\t//   ...userInput, // the other values should also be initialized here so that they don't get lost when we update a single value\n\t\t//   enteredTitle: event.target.value,\n\t\t// });\n\n\t\t//////////////////////////////////////////////////////////////////////////////////////////////\n\t\t// When depends on the previous state (value)\n\t\t// setUserInput((prevState) => {\n\t\t//   return { ...prevState, enteredTitle: event.target.value };\n\t\t// });\n\t};\n\n\tconst amountChangeHandler = event => {\n\t\tsetEnteredAmount(event.target.value);\n\t\t// setUserInput({\n\t\t//   ...userInput,\n\t\t//   enteredAmount: event.target.value,\n\t\t// });\n\t};\n\n\tconst dateChangeHandler = event => {\n\t\tsetEnteredDate(event.target.value);\n\t\t// setUserInput({\n\t\t//   ...userInput,\n\t\t//   enteredDate: event.target.value,\n\t\t// });\n\t};\n\n\tconst submitHandler = event => {\n\t\tevent.preventDefault();\n\n\t\tconst expenseData = {\n\t\t\ttitle: enteredTitle,\n\t\t\tamount: enteredAmount,\n\t\t\tdate: new Date(enteredDate),\n\t\t};\n\n\t\tprops.onSaveExpenseData(expenseData); // from NewExpense.js\n\n\t\t// Two-Way-Binding -----> helps to update the form input values and on the submission then again reinitialize to empty, this is done by adding value attribute in the JSX below and adding the functions defined below\n\t\tsetEnteredTitle(''); // Two Way Binding\n\t\tsetEnteredAmount(''); // Two Way Binding\n\t\tsetEnteredDate(''); // Two Way Binding\n\t};\n\n\treturn (\n\t\t<form onSubmit={submitHandler}>\n\t\t\t<div className='new-expense__controls'>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={enteredTitle} // Two Way Binding\n\t\t\t\t\t\tonChange={titleChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Amount</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='0.01'\n\t\t\t\t\t\tstep='0.01'\n\t\t\t\t\t\tvalue={enteredAmount} // Two Way Binding\n\t\t\t\t\t\tonChange={amountChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='new-expense__control'>\n\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tmin='2019-01-01'\n\t\t\t\t\t\tmax='2022-12-31'\n\t\t\t\t\t\tvalue={enteredDate} // Two Way Binding\n\t\t\t\t\t\tonChange={dateChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='new-expense__actions'>\n\t\t\t\t<button type='submit'>Add Expense</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ExpenseForm;\n","import React from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = props => {\n\tconst saveExpenseDataHandler = enteredExpenseData => {\n\t\tconst expenseData = {\n\t\t\t...enteredExpenseData,\n\t\t\tid: Math.random().toString(),\n\t\t};\n\t\tprops.onAddExpense(expenseData); // From App.js\n\t};\n\n\treturn (\n\t\t<div className='new-expense'>\n\t\t\t<ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n\t\t</div>\n\t);\n};\n\nexport default NewExpense;\n","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n\t{\n\t\tid: 'e1',\n\t\ttitle: 'Toilet Paper',\n\t\tamount: 94.12,\n\t\tdate: new Date(2020, 7, 14),\n\t},\n\t{ id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n\t{\n\t\tid: 'e3',\n\t\ttitle: 'Car Insurance',\n\t\tamount: 294.67,\n\t\tdate: new Date(2021, 2, 28),\n\t},\n\t{\n\t\tid: 'e4',\n\t\ttitle: 'New Desk (Wooden)',\n\t\tamount: 450,\n\t\tdate: new Date(2021, 5, 12),\n\t},\n];\n\nconst App = () => {\n\tconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\tconst addExpenseHandler = expense => {\n\t\tsetExpenses(prevExpenses => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\n\t// return React.createElement(\n\t//   'div',\n\t//   {},\n\t//   React.createElement('h2', {}, \"Let's get started!\"),\n\t//   React.createElement(Expenses, { items: expenses })\n\t// );\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n\t\t\t<Expenses items={expenses} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}